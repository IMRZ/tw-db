import { CollectionCache, CollectionKey } from "../../../common";
import { AudioEntityRandomVocalisations } from "./AudioEntityRandomVocalisations";
import { AudioMaterials } from "./AudioMaterials";
import { AudioGroupSounds } from "./AudioGroupSounds";
import { AudioEntityTypeLimitations } from "./AudioEntityTypeLimitations";
import { AudioEntityLoopingSounds } from "./AudioEntityLoopingSounds";
import { AudioEntityActors } from "./AudioEntityActors";
import { TexcExpansions } from "./TexcExpansions";
import { AudioSphereOfInfluences } from "./AudioSphereOfInfluences";
import { AudioEntityFocusPools } from "./AudioEntityFocusPools";
export declare namespace AudioEntityTypes {
    const KEY: CollectionKey;
    class Entry {
        private readonly collectionCache;
        readonly key: string;
        readonly switch: string;
        readonly _idleRandomVocalisation: string;
        readonly _runningRandomVocalisation: string;
        readonly _combatRandomVocalisation: string;
        readonly _fatiguedMovingRandomVocalisation: string;
        readonly _drowningRandomVocalisation: string;
        readonly musicianEvent: string;
        readonly _material: string;
        readonly _walkingRandomVocalisation: string;
        readonly _groupMovement: string;
        readonly _limitation: string;
        readonly _idleLoopingSound: string;
        readonly _movingLoopingSound: string;
        readonly _rotatingLoopingSound: string;
        readonly _actorType: string;
        readonly _fatiguedIdleRandomVocalisation: string;
        readonly _groupFlyingIdle: string;
        readonly _groupFlyingMoving: string;
        readonly onlyUsesMaterial: boolean;
        readonly _groupMovementArmourOverride: string;
        readonly _groupIdle: string;
        readonly attenuationScale: number;
        readonly _groupMeleeArmourOverride: string;
        readonly triggersCinematic: boolean;
        readonly _gameExpansionKey: string;
        readonly _sphereOfInfluenceDefault: string;
        readonly _sphereOfInfluenceCombat: string;
        readonly shouldUseUniqueEntitySwitches: boolean;
        readonly maxUniqueEntitySwitches: number;
        readonly uniqueEntitySwitch: string;
        readonly useFocusRtpc: boolean;
        readonly maxCameraDistanceForFocus: number;
        readonly minCameraDistanceForFocus: number;
        readonly focusRtpc: string;
        readonly considerMoving: boolean;
        readonly _groupIdleShoot: string;
        readonly _groupIdleCombatReady: string;
        readonly recordId: number;
        readonly _focusPool: string;
        readonly minUnitFocusVelocity: number;
        constructor(collectionCache: CollectionCache, values: any);
        get idleRandomVocalisation(): AudioEntityRandomVocalisations.Entry | undefined;
        get runningRandomVocalisation(): AudioEntityRandomVocalisations.Entry | undefined;
        get combatRandomVocalisation(): AudioEntityRandomVocalisations.Entry | undefined;
        get fatiguedMovingRandomVocalisation(): AudioEntityRandomVocalisations.Entry | undefined;
        get drowningRandomVocalisation(): AudioEntityRandomVocalisations.Entry | undefined;
        get material(): AudioMaterials.Entry | undefined;
        get walkingRandomVocalisation(): AudioEntityRandomVocalisations.Entry | undefined;
        get groupMovement(): AudioGroupSounds.Entry | undefined;
        get limitation(): AudioEntityTypeLimitations.Entry | undefined;
        get idleLoopingSound(): AudioEntityLoopingSounds.Entry | undefined;
        get movingLoopingSound(): AudioEntityLoopingSounds.Entry | undefined;
        get rotatingLoopingSound(): AudioEntityLoopingSounds.Entry | undefined;
        get actorType(): AudioEntityActors.Entry | undefined;
        get fatiguedIdleRandomVocalisation(): AudioEntityRandomVocalisations.Entry | undefined;
        get groupFlyingIdle(): AudioGroupSounds.Entry | undefined;
        get groupFlyingMoving(): AudioGroupSounds.Entry | undefined;
        get groupMovementArmourOverride(): AudioGroupSounds.Entry | undefined;
        get groupIdle(): AudioGroupSounds.Entry | undefined;
        get groupMeleeArmourOverride(): AudioGroupSounds.Entry | undefined;
        get gameExpansionKey(): TexcExpansions.Entry | undefined;
        get sphereOfInfluenceDefault(): AudioSphereOfInfluences.Entry | undefined;
        get sphereOfInfluenceCombat(): AudioSphereOfInfluences.Entry | undefined;
        get groupIdleShoot(): AudioGroupSounds.Entry | undefined;
        get groupIdleCombatReady(): AudioGroupSounds.Entry | undefined;
        get focusPool(): AudioEntityFocusPools.Entry | undefined;
    }
}
export default AudioEntityTypes;
