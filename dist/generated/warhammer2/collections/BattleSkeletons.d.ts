import { CollectionCache, CollectionKey } from "../../../common";
import { BattleSkeletonsLocomotionEnums } from "./BattleSkeletonsLocomotionEnums";
import { TexcExpansions } from "./TexcExpansions";
export declare namespace BattleSkeletons {
    const KEY: CollectionKey;
    class Entry {
        private readonly collectionCache;
        readonly name: string;
        readonly root: string;
        readonly scale: number;
        readonly scaleDeviation: number;
        readonly hipsNode: string;
        readonly spineNode: string;
        readonly weapon1Node: string;
        readonly weapon2Node: string;
        readonly weapon3Node: string;
        readonly weapon4Node: string;
        readonly weapon5Node: string;
        readonly headNode: string;
        readonly neckNode: string;
        readonly leftshoulderNode: string;
        readonly rightshoulderNode: string;
        readonly leftarmNode: string;
        readonly rightarmNode: string;
        readonly lefthandNode: string;
        readonly righthandNode: string;
        readonly leftuplegNode: string;
        readonly rightuplegNode: string;
        readonly leftlegNode: string;
        readonly rightlegNode: string;
        readonly leftfootNode: string;
        readonly rightfootNode: string;
        readonly leftfingerNode: string;
        readonly rightfingerNode: string;
        readonly lefttoeNode: string;
        readonly righttoeNode: string;
        readonly leftwheelNode: string;
        readonly rightwheelNode: string;
        readonly categoryMan: boolean;
        readonly categoryMount: boolean;
        readonly categoryEngine: boolean;
        readonly weapon6Node: string;
        readonly categoryAnimal: boolean;
        readonly categoryFauna: boolean;
        readonly cinematic: boolean;
        readonly _locomotion: string;
        readonly leftwingbaseNode: string;
        readonly rightwingbaseNode: string;
        readonly filterProjectilesNode: string;
        readonly headTrackingAngle: number;
        readonly backNode: string;
        readonly frontLeftUpperLegNode: string;
        readonly frontRightUpperLegNode: string;
        readonly frontLefttoeNode: string;
        readonly frontRighttoeNode: string;
        readonly rearLeftUpperLegNode: string;
        readonly rearRightUpperLegNode: string;
        readonly rearLefttoeNode: string;
        readonly rearRighttoeNode: string;
        readonly footstepNodes: string;
        readonly footstepDetectionHeight: number;
        readonly articulationNode: string;
        readonly flyingPivotNode: string;
        readonly torsoSpliceNode: string;
        readonly _gameExpansionKey: string;
        constructor(collectionCache: CollectionCache, values: any);
        get locomotion(): BattleSkeletonsLocomotionEnums.Entry | undefined;
        get gameExpansionKey(): TexcExpansions.Entry | undefined;
    }
}
export default BattleSkeletons;
