import { CollectionCache, CollectionKey } from "../../../common";
import { CulturesSubcultures } from "./CulturesSubcultures";
import { NamesGroups } from "./NamesGroups";
import { UnitBanners } from "./UnitBanners";
import { GroupingsMilitary } from "./GroupingsMilitary";
import { PreBattleSpeechParametersEnum } from "./PreBattleSpeechParametersEnum";
import { AudioVoiceoverCultures } from "./AudioVoiceoverCultures";
import { MpForceGenTemplates } from "./MpForceGenTemplates";
import { Videos } from "./Videos";
import { MainUnits } from "./MainUnits";
import { TexcExpansions } from "./TexcExpansions";
import { CdirMilitaryGeneratorConfigs } from "./CdirMilitaryGeneratorConfigs";
import { CampaignUnitPermissionGroups } from "./CampaignUnitPermissionGroups";
import { FactionFeatureForests } from "./FactionFeatureForests";
export declare namespace Factions {
    const KEY: CollectionKey;
    class Entry {
        private readonly collectionCache;
        readonly key: string;
        readonly index: number;
        readonly _subculture: string;
        readonly category: string;
        readonly screenName: string;
        readonly screenNameWhenRebels: string;
        readonly screenAdjective: string;
        readonly _nameGroup: number;
        readonly _skin: string;
        readonly flagsPath: string;
        readonly primaryColourR: number;
        readonly primaryColourG: number;
        readonly primaryColourB: number;
        readonly secondaryColourR: number;
        readonly secondaryColourG: number;
        readonly secondaryColourB: number;
        readonly rebelColourR: number;
        readonly rebelColourG: number;
        readonly rebelColourB: number;
        readonly uniformColourR: number;
        readonly uniformColourG: number;
        readonly uniformColourB: number;
        readonly _militaryGroup: string;
        readonly mpAvailable: boolean;
        readonly mpAvailableNaval: boolean;
        readonly _movieDeathEvent: any;
        readonly _unitRegimentNameGroup: number;
        readonly _shipNameGroup: number;
        readonly uiSkin: string;
        readonly attackDesc: string;
        readonly defendDesc: string;
        readonly _preBattleSpeechParameter: string;
        readonly cardColourR: number;
        readonly cardColourG: number;
        readonly cardColourB: number;
        readonly senatorTotal: number;
        readonly senatorTextNOutOfN: string;
        readonly _audioVoiceoverCulture: string;
        readonly _mpForceGenTemplate: string;
        readonly factionSwappingId: string;
        readonly _winMovie: string;
        readonly hasPolitics: boolean;
        readonly _waaaghFaction: string;
        readonly _waaaghGeneralUnit: string;
        readonly isQuestFaction: boolean;
        readonly _gameExpansionKey: string;
        readonly _cdirMilitaryGeneratorConfig: string;
        readonly _campaignUnitPermissionGroup: string;
        readonly _grantRebelCapturesToFaction: string;
        readonly _featureForest: string;
        readonly isRebel: boolean;
        readonly battleFlagPath: string;
        readonly textReplacementKey: string;
        readonly battleFlagPathHistorical: string;
        readonly _loseMovie: string;
        constructor(collectionCache: CollectionCache, values: any);
        get subculture(): CulturesSubcultures.Entry | undefined;
        get nameGroup(): NamesGroups.Entry | undefined;
        get skin(): UnitBanners.Entry | undefined;
        get militaryGroup(): GroupingsMilitary.Entry | undefined;
        get unitRegimentNameGroup(): NamesGroups.Entry | undefined;
        get shipNameGroup(): NamesGroups.Entry | undefined;
        get preBattleSpeechParameter(): PreBattleSpeechParametersEnum.Entry | undefined;
        get audioVoiceoverCulture(): AudioVoiceoverCultures.Entry | undefined;
        get mpForceGenTemplate(): MpForceGenTemplates.Entry | undefined;
        get winMovie(): Videos.Entry | undefined;
        get waaaghFaction(): Factions.Entry | undefined;
        get waaaghGeneralUnit(): MainUnits.Entry | undefined;
        get gameExpansionKey(): TexcExpansions.Entry | undefined;
        get cdirMilitaryGeneratorConfig(): CdirMilitaryGeneratorConfigs.Entry | undefined;
        get campaignUnitPermissionGroup(): CampaignUnitPermissionGroups.Entry | undefined;
        get grantRebelCapturesToFaction(): Factions.Entry | undefined;
        get featureForest(): FactionFeatureForests.Entry | undefined;
        get loseMovie(): Videos.Entry | undefined;
    }
}
export default Factions;
