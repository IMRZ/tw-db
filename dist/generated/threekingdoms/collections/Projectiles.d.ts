import { CollectionCache, CollectionKey } from "../../../common";
import { ProjectileShotTypeEnum } from "./ProjectileShotTypeEnum";
import { ProjectilesExplosions } from "./ProjectilesExplosions";
import { ProjectilesSpinTypeEnum } from "./ProjectilesSpinTypeEnum";
import { ProjectileDisplays } from "./ProjectileDisplays";
import { SpecialAbilityPhases } from "./SpecialAbilityPhases";
import { AudioProjectiles } from "./AudioProjectiles";
import { ProjectileHomingParams } from "./ProjectileHomingParams";
import { ProjectileFirstPersonParams } from "./ProjectileFirstPersonParams";
import { ProjectilePenetrationJunctions } from "./ProjectilePenetrationJunctions";
import { TexcExpansions } from "./TexcExpansions";
import { Deployables } from "./Deployables";
export declare namespace Projectiles {
    const KEY: CollectionKey;
    class Entry {
        private readonly collectionCache;
        readonly key: string;
        readonly _category: any;
        readonly _shotType: string;
        readonly _explosionType: string;
        readonly highAirResistance: boolean;
        readonly _spinType: string;
        readonly projectileNumber: number;
        readonly _trajectorySight: any;
        readonly effectiveRange: number;
        readonly minimumRange: number;
        readonly maxElevation: number;
        readonly muzzleVelocity: number;
        readonly marksmanshipBonus: number;
        readonly spread: number;
        readonly damage: number;
        readonly apDamage: number;
        readonly canBounce: boolean;
        readonly collisionRadius: number;
        readonly baseReloadTime: number;
        readonly calibrationDistance: number;
        readonly calibrationArea: number;
        readonly bonusVInfantry: number;
        readonly bonusVCavalry: number;
        readonly bonusVLarge: number;
        readonly _projectileDisplay: string;
        readonly _overheadStatEffect: string;
        readonly _contactStatEffect: string;
        readonly _projectileAudio: string;
        readonly shockwaveRadius: number;
        readonly canDamageBuildings: boolean;
        readonly isGrapple: boolean;
        readonly burstSize: number;
        readonly burstShotDelay: number;
        readonly gravity: number;
        readonly mass: number;
        readonly _homingParams: string;
        readonly _firstPersonParams: string;
        readonly ignitionAmount: number;
        readonly isMagical: boolean;
        readonly canTargetAirborne: boolean;
        readonly fixedElevation: number;
        readonly _projectilePenetration: string;
        readonly expiryRange: number;
        readonly isBeamLaunchBurst: boolean;
        readonly expireOnImpact: boolean;
        readonly canRoll: boolean;
        readonly shotsPerVolley: number;
        readonly _gameExpansionKey: string;
        readonly firedByMount: boolean;
        readonly preferCentralTargets: boolean;
        readonly canDamageVehicles: boolean;
        readonly lockOnMultipleFirePos: boolean;
        readonly _spawnDeployableOnImpact: string;
        constructor(collectionCache: CollectionCache, values: any);
        get shotType(): ProjectileShotTypeEnum.Entry | undefined;
        get explosionType(): ProjectilesExplosions.Entry | undefined;
        get spinType(): ProjectilesSpinTypeEnum.Entry | undefined;
        get projectileDisplay(): ProjectileDisplays.Entry | undefined;
        get overheadStatEffect(): SpecialAbilityPhases.Entry | undefined;
        get contactStatEffect(): SpecialAbilityPhases.Entry | undefined;
        get projectileAudio(): AudioProjectiles.Entry | undefined;
        get homingParams(): ProjectileHomingParams.Entry | undefined;
        get firstPersonParams(): ProjectileFirstPersonParams.Entry | undefined;
        get projectilePenetration(): ProjectilePenetrationJunctions.Entry | undefined;
        get gameExpansionKey(): TexcExpansions.Entry | undefined;
        get spawnDeployableOnImpact(): Deployables.Entry | undefined;
    }
}
export default Projectiles;
