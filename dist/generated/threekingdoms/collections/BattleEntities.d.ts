import { CollectionCache, CollectionKey } from "../../../common";
import { BattleEntitiesTypesEnum } from "./BattleEntitiesTypesEnum";
import { BattleEntitiesSizeEnums } from "./BattleEntitiesSizeEnums";
import { BattleEntitiesGradientStrategyEnums } from "./BattleEntitiesGradientStrategyEnums";
import { AudioEntityTypes } from "./AudioEntityTypes";
import { BattleEntityEffectsJunctions } from "./BattleEntityEffectsJunctions";
import { UnitPortholeCameraSettings } from "./UnitPortholeCameraSettings";
import { BattleCameraShakeParameters } from "./BattleCameraShakeParameters";
export declare namespace BattleEntities {
    const KEY: CollectionKey;
    class Entry {
        private readonly collectionCache;
        readonly key: string;
        readonly _type: string;
        readonly walkSpeed: number;
        readonly runSpeed: number;
        readonly acceleration: number;
        readonly deceleration: number;
        readonly chargeSpeed: number;
        readonly strafeSpeed: number;
        readonly chargeDistanceCommenceRun: number;
        readonly chargeDistanceAdoptChargePose: number;
        readonly chargeDistancePickTarget: number;
        readonly radius: number;
        readonly _shape: any;
        readonly radiiRatio: number;
        readonly mass: number;
        readonly height: number;
        readonly fireArcClose: number;
        readonly turnSpeed: number;
        readonly allowTurnToMoveAnim: boolean;
        readonly allowStaticTurnAnim: boolean;
        readonly minTurningSpeed: number;
        readonly flySpeed: number;
        readonly flyingChargeSpeed: number;
        readonly _size: string;
        readonly _gradientStrategy: string;
        readonly _audioEntityType: string;
        readonly combatReactionRadius: number;
        readonly _entityEffects: string;
        readonly hitReactionsIgnoreChance: number;
        readonly knockInterruptsIgnoreChance: number;
        readonly softCollisionOffsetZ: number;
        readonly canClimbLadderAndStairPipes: boolean;
        readonly projectileIntersectionRadiusRatio: number;
        readonly projectilePenetrationResistance: number;
        readonly projectilePenetrationSpeedChange: number;
        readonly auraVfx: string;
        readonly _portholeCamera: string;
        readonly minTrackingRatio: number;
        readonly maxTrackingRatio: number;
        readonly vfxFilterId: number;
        readonly canCastProjectile: boolean;
        readonly portholeCompositeScene: string;
        readonly _combatCameraShake: string;
        readonly hasBlood: boolean;
        readonly canDismember: boolean;
        readonly dismemberArmsAliveHpRatio: number;
        readonly dismemberHeadAliveHpRatio: number;
        constructor(collectionCache: CollectionCache, values: any);
        get type(): BattleEntitiesTypesEnum.Entry | undefined;
        get size(): BattleEntitiesSizeEnums.Entry | undefined;
        get gradientStrategy(): BattleEntitiesGradientStrategyEnums.Entry | undefined;
        get audioEntityType(): AudioEntityTypes.Entry | undefined;
        get entityEffects(): BattleEntityEffectsJunctions.Entry | undefined;
        get portholeCamera(): UnitPortholeCameraSettings.Entry | undefined;
        get combatCameraShake(): BattleCameraShakeParameters.Entry | undefined;
    }
}
export default BattleEntities;
